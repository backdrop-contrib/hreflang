<?php

/**
 * @file
 * Functional tests for Alternate hreflang.
 */

/**
 * Functional tests for Alternate hreflang.
 */
class HreflangTest extends BackdropWebTestCase {

    /**
     * {@inheritdoc}
     */
    public function setUp() {
        parent::setUp('hreflang', 'locale');

        // User to add language.
        $this->adminUser = $this->backdropCreateUser(array(
            'access administration pages',
            'administer languages',
        ));
        $this->backdropLogin($this->adminUser);

        // Add predefined language.
        $edit = array('langcode' => 'fr');
        $this->backdropPost('admin/config/regional/language/add', $edit, t('Add language'));
    }

    /**
     * Test that hreflang link tags are added with URL detection.
     */
    public function testHreflangMarkup() {
        global $base_url;

        // Enable language detection.
        $edit = array('language[enabled][locale-url]' => 1);
        $this->backdropPost('admin/config/regional/language/configure', $edit, t('Save settings'));

        $url = $base_url . '/';
        $path = config_get('clean_url', 0) ? 'fr' : '?q=fr';

        $this->backdropGet('');
        $this->assertRaw('<link href="' . $url . $path . '" rel="alternate" hreflang="fr" />', 'French hreflang found on English page.');
        $this->assertRaw('<link href="' . $url . '" rel="alternate" hreflang="en" />', 'English hreflang found on English page.');

        $this->backdropGet('fr');
        $this->assertRaw('<link href="' . $url . $path . '" rel="alternate" hreflang="fr" />', 'French hreflang found on French page.');
        $this->assertRaw('<link href="' . $url . '" rel="alternate" hreflang="en" />', 'English hreflang found on French page.');
    }

    /**
     * Test that hreflang link tags are added with session detection.
     */
    public function testHreflangMarkupSession() {
        global $base_url;

        // Enable language detection.
        $edit = array('language[enabled][locale-session]' => 1);
        $this->backdropPost('admin/config/regional/language/configure', $edit, t('Save settings'));

        $url = $base_url . '/';
        $french = '?language=fr';
        $english = '?language=en';

        $this->backdropGet('');
        $this->assertRaw('<link href="' . $url . $french . '" rel="alternate" hreflang="fr" />', 'French hreflang found on default page.');
        $this->assertRaw('<link href="' . $url . '" rel="alternate" hreflang="en" />', 'English hreflang found on default page.');

        $this->backdropGet('', array('query' => array('language' => 'en')));
        $this->assertRaw('<link href="' . $url . $french . '" rel="alternate" hreflang="fr" />', 'French hreflang found on English page.');
        $this->assertRaw('<link href="' . $url . $english . '" rel="alternate" hreflang="en" />', 'English hreflang found on English page.');

        $this->backdropGet('', array('query' => array('language' => 'fr')));
        $this->assertRaw('<link href="' . $url . $french . '" rel="alternate" hreflang="fr" />', 'French hreflang found on French page.');
        $this->assertRaw('<link href="' . $url . $english . '" rel="alternate" hreflang="en" />', 'English hreflang found on French page.');
    }

}

/**
 * Functional tests for Alternate hreflang with Content translation.
 */
class HreflangContentTranslationTest extends BackdropWebTestCase {

    /**
     * {@inheritdoc}
     */
    public function setUp() {
        parent::setUp('hreflang', 'locale', 'translation');
    }

    /**
     * Test that Content translation doesn't trigger an exception.
     */
    public function testHreflangContentTranslation() {
        global $base_url;

        // User to add language.
        $admin_user = $this->backdropCreateUser(array(
            'access administration pages',
            'access content',
            'administer content types',
            'administer languages',
            'create page content',
        ));
        $this->backdropLogin($admin_user);

        // Add predefined language.
        $edit = array('langcode' => 'fr');
        $this->backdropPost('admin/config/regional/language/add', $edit, t('Add language'));

        // Enable language detection.
        $edit = array('language[enabled][locale-url]' => 1);
        $this->backdropPost('admin/config/regional/language/configure', $edit, t('Save settings'));

        // Set "Basic page" content type to use translation.
        $this->backdropGet('admin/structure/types/manage/page');
        $edit = array();
        $edit['language_content_type'] = 2;
        $this->backdropPost('admin/structure/types/manage/page', $edit, t('Save content type'));

        // Create an English-language node.
        $edit = array();
        $edit['title'] = $this->randomName(8);
        $edit['body[' . LANGUAGE_NONE . '][0][value]'] = $this->randomName(16);
        $edit['language'] = 'fr';
        $this->backdropPost('node/add/page', $edit, t('Save'));
    }

}
